name: Build and Release

on:
  push:
    branches: ['main']

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Get the current version
        id: get_version
        run: |
          VERSION=$(cat version.txt)
          echo "Current version: $VERSION"
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Increment the version
        id: increment_version
        run: |
          VERSION=${{ env.VERSION }}
          IFS='.' read -r -a version_parts <<< "$VERSION"
          PATCH=${version_parts[2]}
          NEW_PATCH=$((PATCH + 1))
          NEW_VERSION="${version_parts[0]}.${version_parts[1]}.$NEW_PATCH"
          echo "New version: $NEW_VERSION"
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV

      - name: Update version file
        run: |
          echo "${{ env.NEW_VERSION }}" > version.txt
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'
          git add version.txt
          git commit -m "Increment version to ${{ env.NEW_VERSION }}"
          git push

      - name: Create Git Tag
        id: tag_version
        run: |
          git tag -a "v${{ env.NEW_VERSION }}" -m "Release version ${{ env.NEW_VERSION }}"
          git push origin "v${{ env.NEW_VERSION }}"

      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release --no-restore

      - name: Publish
        run: |
          dotnet publish "./Gamma Switcher/Gamma Switcher.csproj" \
            --configuration Release \
            --framework net8.0-windows \
            --runtime win-x64 \
            --self-contained \
            /p:PublishSingleFile=true \
            /p:PublishTrimmed=false \
            /p:ReadyToRun=false \
            /p:IncludeNativeLibrariesForSelfExtract=false \
            --output ./output

      - name: Zip the output directory
        run: zip -r gamma-switcher-win64-${{ env.NEW_VERSION }}.zip ./output

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: 'v${{ env.NEW_VERSION }}'
          release_name: 'v${{ env.NEW_VERSION }}'
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./gamma-switcher-win64-${{ env.NEW_VERSION  }}.zip
          asset_name: gamma-switcher-win64-${{ env.NEW_VERSION  }}.zip
          asset_content_type: application/zip
